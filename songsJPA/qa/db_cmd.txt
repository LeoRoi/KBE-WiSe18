¤ postgre db management
_______________________

Für das Projekt “songsRX” können Sie die
1:n-Beziehung User-SongLists und die
n:m-Beziehung Songs-SongLists
modellieren und entsprechende Tabellen und Entities erstellen

\

delete from songs where id=1;

\

drop table users;
CREATE TABLE users (
id                  SERIAL PRIMARY KEY,
userId VARCHAR(10)  NOT NULL,
firstName           VARCHAR(30) NOT NULL,
lastName            VARCHAR(30) NOT NULL
);

INSERT INTO users VALUES(1, 'mmuster', 'Maxime', 'Muster');
INSERT INTO users VALUES(2, 'eschuler', 'Elena', 'Schuler');

alter sequence users_id_seq restart with 3;
select last_value from users_id_seq;

\

drop table songs;
create table songs (
  id        SERIAL PRIMARY KEY,
  title     VARCHAR(100) NOT NULL,
  artist    VARCHAR(100) NOT NULL,
  album     VARCHAR(100) NOT NULL,
  released  integer NOT NULL
);

insert into songs values(1, 'Can''t Stop the Feeling', 'Justin Timberlake', 'Trolls', 2016);
insert into songs values(2, 'Mom', 'Meghan Trainor, Kelli Trainor', 'Thank You', 2016);
insert into songs values(3, 'Team', 'Iggy Azalea', 'null', 2016);
insert into songs values(4, 'Ghostbusters (I''m not a fraid)', 'Fall Out Boy, Missy Elliott', 'Ghostbusters', 2016);
insert into songs values(5, 'Bad Things', 'Camila Cabello, Machine Gun Kelly', 'Bloom', 2017);
insert into songs values(6, 'I Took a Pill in Ibiza', 'Mike Posner', 'At Night, Alone.', 2016);
insert into songs values(7, 'i hate u, i love u', 'Gnash', 'Top Hits 2017', 2017);
insert into songs values(8, 'No', 'Meghan Trainor', 'Thank You', 2016);
insert into songs values(9, 'Private Show', 'Britney Spears', 'Glory', 2016);
insert into songs values(10, '7 Years', 'Lukas Graham', 'Lukas Graham (Blue Album)', 2015);

alter sequence songs_id_seq restart with 11;
select last_value from songs_id_seq;

\

drop table songstester;
create table songstester (
  id        SERIAL PRIMARY KEY,
  title     VARCHAR(100) NOT NULL,
  artist    VARCHAR(100) NOT NULL,
  album     VARCHAR(100) NOT NULL,
  released  integer NOT NULL
);

\ 1:n-Beziehung User-SongLists

drop table playlists;
create table playlists (
    id      SERIAL PRIMARY KEY,
    open    BOOLEAN NOT NULL,
    owner   integer,
    FOREIGN KEY (owner) REFERENCES users(id) ON DELETE CASCADE
);

insert into playlists values(1, TRUE, 1);
insert into playlists values(2, FALSE, 1);
insert into playlists values(3, TRUE, 2);
insert into playlists values(4, FALSE, 2);

alter sequence playlists_id_seq restart with 5;
select last_value from playlists_id_seq;

\ n:m-Beziehung Songs-SongLists

drop table psmap;
create table psmap (
    pid     INT,
    sid     INT,
    PRIMARY KEY (sid, pid),
    FOREIGN KEY (sid) REFERENCES songs(id) ON UPDATE CASCADE,
    FOREIGN KEY (pid) REFERENCES playlists(id) ON UPDATE CASCADE
);

insert into psmap values (1, 1);
insert into psmap values (1, 2);

insert into psmap values (2, 3);
insert into psmap values (2, 4);
insert into psmap values (2, 5);
insert into psmap values (2, 6);

insert into psmap values (3, 1);
insert into psmap values (3, 2);

insert into psmap values (4, 7);
insert into psmap values (4, 8);
insert into psmap values (4, 9);
insert into psmap values (4, 10);