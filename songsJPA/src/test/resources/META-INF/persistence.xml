<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence" version="2.0">

    <!--<persistence-unit name="songDB-test" transaction-type="RESOURCE_LOCAL">-->
        <!--<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>-->

        <!--<class>de.htw.ai.kbe.entity.Song</class>-->
        <!--<class>de.htw.ai.kbe.entity.User</class>-->
        <!--<exclude-unlisted-classes>true</exclude-unlisted-classes>-->

        <!--<properties>-->
            <!--&lt;!&ndash; psql driver &ndash;&gt;-->
            <!--<property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/>-->
            <!--&lt;!&ndash;db host&ndash;&gt;-->
            <!--<property name="javax.persistence.jdbc.url" value="jdbc:postgresql://db.f4.htw-berlin.de:5432/_s0557966__songs_postgre"/>-->
            <!--&lt;!&ndash;user&ndash;&gt;-->
            <!--<property name="javax.persistence.jdbc.user" value="_s0557966__songs_postgre_generic"/>-->
            <!--&lt;!&ndash;pw&ndash;&gt;-->
            <!--<property name="javax.persistence.jdbc.password" value="password_generic"/>-->

            <!--&lt;!&ndash; Echo all executed SQL to stdout &ndash;&gt;-->
            <!--<property name="hibernate.show_sql" value="true"/>-->

            <!--&lt;!&ndash; SQL dialect &ndash;&gt;-->
            <!--<property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQL92Dialect"/>-->

            <!--&lt;!&ndash; JDBC connection pool (use the built-in) &ndash;&gt;-->
            <!--<property name="connection.pool_size" value="1"/>-->
        <!--</properties>-->
    <!--</persistence-unit>-->
<!--</persistence>-->

    <persistence-unit name="songDB-test" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>

        <class>de.htw.ai.kbe.entity.Song</class>
        <!--<class>de.htw.ai.kbe.entity.User</class>-->

        <properties>
            <property name="javax.persistence.jdbc.driver" value="org.hsqldb.jdbcDriver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:hsqldb:mem:PUBLIC"/>

            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/>

            <property name="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect"/>
            <!--<property name="javax.persistence.schema-generation.database.action" value="create"/>-->
            <property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/>

            <property name="javax.persistence.schema-generation.create-source" value="script"/>
            <property name="javax.persistence.schema-generation.create-script-source"
                      value="META-INF/sql/createDBH.sql" />
            <property name="javax.persistence.sql-load-script-source" value="META-INF/sql/data.sql" />

            <!--<property name="javax.persistence.schema-generation.drop-source" value="script" />-->
            <!--<property name="javax.persistence.schema-generation.drop-script-source" value="META-INF/sql/drop.sql" />-->

            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="false"/>
        </properties>
    </persistence-unit>
</persistence>